{"version":3,"sources":["components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","services/logService.js","services/httpService.js","services/authService.js","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","services/movieService.js","services/genreService.js","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","a","createElement","className","_this2","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","_this$props","data","Table","_ref","tableHeader","tableBody","Like","classes","liked","style","cursor","aria-hidden","logService","init","log","error","console","axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","response","use","status","logger","toast","Promise","reject","httpService","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","tokenKey","_callee","email","password","_yield$http$post","regenerator_default","wrap","_context","prev","next","http","sent","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","Link","to","concat","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","movieUrl","id","getMovie","movieId","saveMovie","body","getGenres","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_step","_iterator","_createForOfIteratorHelper","details","s","n","done","message","err","f","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_select","undefined","common_input","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","originalMovie","history","match","params","mapToViewModel","_context3","replace","populateGeneres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","LoginForm","username","location","window","from","pathname","Redirect","RegisterForm","_yield$userService$re","Logout","ProtectedRoute","component","render","Route","App","lib","navBar","Switch","protectedRoute","components_movies","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","BrowserRouter","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7e1191f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","\nfunction init() {\n}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\n\nfunction setJwt(jwt){\n  axios.defaults.headers.common['x-auth-token'] = jwt; \n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndPoint = `/auth`;\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password){\r\n    const { data: jwt} = await http.post(apiEndPoint,{ email, password });\r\n    localStorage.setItem(tokenKey,jwt)\r\n}\r\n\r\nexport function logout(){\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function loginWithJwt(jwt){\r\n    localStorage.setItem(tokenKey,jwt);\r\n}\r\n\r\nexport function getCurrentUser(){\r\n    try{\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n      }catch(ex) {\r\n          return null;\r\n      }\r\n}\r\n\r\nexport function getJwt(){\r\n   return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    loginWithJwt,\r\n    getJwt\r\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\nimport auth from \"../services/authService\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  \n  deleteColumn = \n  {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  }\n\n\n  constructor(){\n    super();\n    \n    const user = auth.getCurrentUser();\n\n    if(user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = `/movies`;\r\n\r\nfunction movieUrl(id){\r\n    return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId))\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id){        \r\n        const body = {...movie}\r\n        delete body._id\r\n        return http.put(movieUrl(movie._id),body)\r\n    }\r\n    return http.post(apiEndPoint, movie)\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n    return http.get(`/genres`);\r\n}","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data : movies } = await getMovies()\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try{\n    await deleteMovie(movie._id);\n    }\n    catch(ex){\n      if(ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted.\")\n\n        this.setState({movies:originalMovies});\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (<Link\n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>)\n          }\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { toast } from \"react-toastify\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\"\n    },\n    genres: [],\n    errors: {}\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string()\n      .required()\n      .label(\"Title\"),\n    genreId: Joi.string()\n      .required()\n      .label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\")\n  };\n\n  async populateGeneres(){\n    const { data:genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie(){\n    try{\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n    \n      const { data:movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n\n    }catch(ex){\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGeneres();\n    await this.populateMovie()\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  doSubmit = async () => {\n    let originalMovie = this.state.data;\n    try{\n      await saveMovie(originalMovie);\n      }\n      catch(ex){\n        if(ex.response && ex.response.status === 404)\n          toast.error(\"This movie doesn't exist.\")\n  \n          this.setState({data:originalMovie});\n      }\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ( {user} ) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\n            Movies\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          {!user && <React.Fragment>\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\n            Register\n          </NavLink>\n          </React.Fragment>}\n          {user && <React.Fragment>\n          <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n            {user.name}\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n            Logout\n          </NavLink>\n          </React.Fragment>}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = async () => {\n    const { data } = this.state;\n    try{\n      await auth.login(data.username, data.password);\n      const { state } = this.props.location;\n\n      window.location = state ? state.from.pathname : \"/\";\n    }catch(ex){\n      if(ex.response && ex.response.status === 400){\n        const errors = { ...this.state.errors }\n        errors.username = ex.response.data;\n        this.setState({errors});\n      }\n    }\n  };\n\n  render() {\n    if(auth.getCurrentUser()) return <Redirect to=\"/\" />\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = `/users`;\r\n\r\nexport function register(user){\r\n    return http.post(apiEndPoint,{\r\n        email: user.username,\r\n        name: user.name,\r\n        password: user.password       \r\n    })\r\n}","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    name: Joi.string()\n      .required()\n      .label(\"Name\")\n  };\n\n  doSubmit = async () => {\n    try{\n      const { headers } = await userService.register(this.state.data);\n      auth.loginWithJwt(headers[\"x-auth-token\"])\n      window.location = \"/\";\n    }catch(ex){\n      if(ex.response && ex.response.status === 400){\n        const errors = { ...this.state.errors }\n        errors.username = ex.response.data;\n        this.setState({errors});\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import  { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component{\r\n\r\n    componentDidMount(){\r\n        auth.logout();\r\n        window.location = \"/\";\r\n    }\r\n\r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component:Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n    {...rest}\r\n\r\n    render={props => {\r\n        if (!auth.getCurrentUser()) return <Redirect to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location }\r\n        }}/>;\r\n        return Component ? <Component {...props}/> : render(props);              \r\n   }} />\r\n\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\"\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {};\n\n  componentDidMount(){\n    const user = auth.getCurrentUser()\n    this.setState({user});    \n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component = {MovieForm} />\n            <Route path=\"/movies\" render={props => <Movies {...props} user={user}/>} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}